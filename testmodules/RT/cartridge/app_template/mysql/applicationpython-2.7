#!/usr/bin/env python
import os
import MySQLdb

def mysql():
    content='GEAR DNS: ' + os.environ['OPENSHIFT_GEAR_DNS'] + '\n'
    try:
        con=MySQLdb.connect(host=os.environ['OPENSHIFT_MYSQL_DB_HOST'], user=os.environ['OPENSHIFT_MYSQL_DB_USERNAME'], passwd=os.environ['OPENSHIFT_MYSQL_DB_PASSWORD'], db=os.environ['OPENSHIFT_APP_NAME'],port=int(os.environ['OPENSHIFT_MYSQL_DB_PORT']))
        cursor = con.cursor()
        cursor.execute("DROP TABLE IF EXISTS ucctalk")
        cursor.execute("CREATE TABLE ucctalk (speaker CHAR(30), title CHAR(60))")
        cursor.execute("INSERT INTO ucctalk (speaker,title) VALUES ('Jeremy Zawodny', 'Optimizing MySQL'), ('Sanja Byelkin', 'Sub-Queries in MySQL'), ('Tim Bunce', 'Advanced Perl DBI')")
        cursor.execute("SELECT * FROM ucctalk")
        alldata = cursor.fetchall()
        if alldata:
            for rec in alldata:
                content+=rec[0]+", "+rec[1]+"\n"
        cursor.close()
        con.commit ()
        con.close()
    except Exception, e:
        content = str(e)
    return content

def application(environ, start_response):
        ctype = 'text/plain'
        if environ['PATH_INFO'] == '/health':
                response_body = "1" 
        elif environ['PATH_INFO'] == '/env':
                response_body = ['%s: %s' % (key, value)
                    for key, value in sorted(environ.items())]
                response_body = '\n'.join(response_body)
        elif environ['PATH_INFO'] == '/mysql':
                response_body = mysql()
        else:
                ctype = 'text/html'
                response_body = '''<!doctype html>
</html>'''

        status = '200 OK'
        response_headers = [('Content-Type', ctype), ('Content-Length', str(len(response_body)))]
        #
        start_response(status, response_headers)
        return [response_body]

if __name__ == '__main__':
        from wsgiref.simple_server import make_server
        httpd = make_server('localhost', 8051, application)
        # Wait for a single request, serve it and quit.
        httpd.handle_request()
